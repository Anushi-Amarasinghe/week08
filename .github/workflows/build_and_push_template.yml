name: Build and Push Service Image

on:
  workflow_call:
    inputs:
      service_path:
        required: true
        type: string
      image_name:
        required: true
        type: string

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    env:
      ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login (service principal)
        uses: azure/login@v2
        with:
          # Requires AZURE_CREDENTIALS repository secret that is the JSON created by:
          # az ad sp create-for-rbac --name "<name>" --sdk-auth
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Derive ACR name from login server
        shell: bash
        run: |
          echo "ACR_LOGIN_SERVER='$ACR_LOGIN_SERVER'"
          if [ -z "$ACR_LOGIN_SERVER" ]; then
            echo "ERROR: AZURE_CONTAINER_REGISTRY secret (login server) is not set."
            exit 1
          fi
          # Extract registry name before the first dot (e.g., myreg.azurecr.io -> myreg)
          ACR_NAME="$(echo "$ACR_LOGIN_SERVER" | cut -d'.' -f1)"
          echo "ACR_NAME=$ACR_NAME" >> $GITHUB_ENV
          echo "ACR_LOGIN_SERVER=$ACR_LOGIN_SERVER" >> $GITHUB_ENV

      - name: Login to Azure Container Registry
        shell: bash
        run: |
          echo "Logging into ACR: $ACR_NAME"
          az acr login --name "$ACR_NAME"

      - name: Build and Push Docker Image
        shell: bash
        run: |
          echo "Building image: ${ACR_LOGIN_SERVER}/${{ inputs.image_name }}:latest from path ${{ inputs.service_path }}"
          docker build -t "${ACR_LOGIN_SERVER}/${{ inputs.image_name }}:latest" "${{ inputs.service_path }}"
          docker push "${ACR_LOGIN_SERVER}/${{ inputs.image_name }}:latest"

      - name: Logout from Azure (best-effort)
        shell: bash
        run: |
          az logout || true
