name: CI/CD Pipeline

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]
  workflow_dispatch:

env:
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  backend-test:
    name: Backend Test
    runs-on: ubuntu-latest
    services:
      product_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: products
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      order_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orders
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install deps and test product_service
        run: |
          pip install -r backend/product_service/requirements.txt
          cd backend/product_service
          pytest tests --maxfail=1 --disable-warnings -q
      - name: Install deps and test order_service
        run: |
          pip install -r backend/order_service/requirements.txt
          cd backend/order_service
          pytest tests --maxfail=1 --disable-warnings -q

  backend-build-push:
    needs: backend-test
    uses: ./.github/workflows/build_and_push_template.yml
    with:
      service_path: ./backend/product_service
      image_name: product_service

  backend-build-push-order:
    needs: backend-test
    uses: ./.github/workflows/build_and_push_template.yml
    with:
      service_path: ./backend/order_service
      image_name: order_service

  frontend-test-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "18"
      - run: |
          cd frontend
          npm ci
          npm run build
          npm test
      - uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build

  frontend-build-push:
    needs: frontend-test-build
    uses: ./.github/workflows/build_and_push_template.yml
    with:
      service_path: ./frontend
      image_name: frontend

  deploy:
    name: Deploy to production (only on main pushes)
    needs: [backend-build-push, backend-build-push-order, frontend-build-push]
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:
      - name: Notify deploy
        run: echo "Deploying images for backend and frontend with tag $IMAGE_TAG"
